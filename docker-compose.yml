version: '2'


networks:

  privnet:
    driver: bridge

  pubnet:
    driver: macvlan
    ipam:
      driver: default
      config:
        # dhcp lease range ${LAN_SUBNET}.50..150 => container range ${LAN_SUBNET}.16/28 (.16....31)
        - subnet: ${LAN_SUBNET}.0/24
          ip_range: ${LAN_SUBNET}.16/28
          gateway: ${LAN_GATEWAY}
    driver_opts:
      parent: enp2s0


volumes:

  desktop_etc_ssh:

  desktop_cron_spool:

  desktop_mail_spool:

  desktop_log:

  ovpn-config:
    external: true

  prom-tsdb:

  grafana-storage:

  pushgateway-storage:

  gitlab-storage:

  gitlab-etc:

  gitlab-log:

  gitlab-runner-config:

  tlscert:

services:

  proxy:
    build:
      context: ./proxy
    networks:
      privnet:
      pubnet:
        ipv4_address: ${LAN_SUBNET}.28
    environment:
      LAN_DNS_SUFFIX: $LAN_DNS_SUFFIX
    volumes:
      - tlscert:/var/opt/tlscert

  www:
    build:
      context: ./www
      args:
        USER_ID: ${USER_ID}
        USER_NAME: ${USER_NAME}
        USERS_GROUP: ${USERS_GROUP}
    image: oklischat/wwwpublish
    hostname: ${BASENAME}www
    networks:
      privnet:
    volumes:
      - /home:/home:ro
      - /media:/media:ro

  desktop:
    build:
      context: ./desktop
      args:
        USER_ID: ${USER_ID}
        USER_NAME: ${USER_NAME}
        USERS_GROUP: ${USERS_GROUP}
        USER_FULLNAME: ${USER_FULLNAME}
        USER_EMAIL: ${USER_EMAIL}
    image: oklischat/desktop
    hostname: ${BASENAME}d
    privileged: true
    networks:
      privnet:
      pubnet:
        ipv4_address: ${LAN_SUBNET}.16
    volumes:
      - desktop_etc_ssh:/etc/ssh
      - desktop_cron_spool:/var/spool/cron
      - desktop_mail_spool:/var/spool/mail
      - desktop_log:/var/log
      - /home:/home
      - /media:/media
      - /var/run/docker.sock:/var/run/docker.sock

  files:
    build:
      context: ./samba
      args:
        USER_NAME: ${USER_NAME}
        USER_ID: ${USER_ID}
        USER_PASSWORD: ${SMB_PASSWORD}
        USERS_GROUP: ${USERS_GROUP}
        USERS_GID: ${USERS_GID}
    image: oklischat/samba
    hostname: ${BASENAME}files
    networks:
      privnet:
      pubnet:
        ipv4_address: ${LAN_SUBNET}.18
    environment:
      TZ: 'CET'
      NMBD: 'true'
    volumes:
      - /home:/home
      - /media:/media

  vpn:
    image: kylemanna/openvpn
    hostname: ${BASENAME}vpn
    networks:
      privnet:
      pubnet:
        ipv4_address: ${LAN_SUBNET}.19
    cap_add:
      - NET_ADMIN
    volumes:
      - ovpn-config:/etc/openvpn

  vnc:
    image: oklischat/ubuntu-xfce-vnc:1.5.1
    hostname: ${BASENAME}vnc
    networks:
      privnet:
      pubnet:
        ipv4_address: ${LAN_SUBNET}.20
    volumes:
      - /home:/home
      - /media:/media

  prometheus:
    build:
      context: ./prometheus
    image: oklischat/prometheus
    hostname: prom
    networks:
      privnet:
    volumes:
      - prom-tsdb:/prometheus

  node-exporter:
    image: quay.io/prometheus/node-exporter:v1.1.1
    hostname: node-exporter
    command:
      - --path.rootfs=/host
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.systemd
      - --collector.processes
      - --collector.filesystem.ignored-mount-points=^/(host)|(dev|proc|sys|var/lib/docker/.+)($$|/)
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$$
    networks:
      privnet:
      pubnet:
        ipv4_address: ${LAN_SUBNET}.22
    volumes:
      - /:/host:ro
      - /var/run/dbus:/var/run/dbus:ro

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.39.1
    hostname: cadvisor
    privileged: true
    networks:
      privnet:
      pubnet:
        ipv4_address: ${LAN_SUBNET}.24
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  pushgateway:
    image: prom/pushgateway
    user: root
    networks:
      privnet:
    command:
      - --persistence.file=/var/lib/pushgateway/data
    volumes:
      - pushgateway-storage:/var/lib/pushgateway

  grafana:
    build:
      context: ./grafana
    image: oklischat/grafana
    hostname: grafana
    networks:
      privnet:
      pubnet:
        ipv4_address: ${LAN_SUBNET}.23
    volumes:
      - grafana-storage:/var/lib/grafana

  cron:
    build:
      context: ./cron
    image: oklischat/cron
    hostname: ${BASENAME}-cron
    networks:
      privnet:
    environment:
      LAN_DNS_SUFFIX: $LAN_DNS_SUFFIX
      ROUTE53_ACCESS_KEY_ID: $ROUTE53_ACCESS_KEY_ID
      ROUTE53_SECRET_ACCESS_KEY: $ROUTE53_SECRET_ACCESS_KEY
      LETSENCRYPT_EMAIL: $LETSENCRYPT_EMAIL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  gitlab:
    image: gitlab/gitlab-ee:15.11.0-ee.0
    hostname: gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url "https://gitlab.${LAN_DNS_SUFFIX}"
        letsencrypt['enable'] = false
        nginx['ssl_certificate'] = "/var/opt/tlscert/live/${LAN_DNS_SUFFIX}/fullchain.pem"
        nginx['ssl_certificate_key'] = "/var/opt/tlscert/live/${LAN_DNS_SUFFIX}/privkey.pem"
        nginx['redirect_http_to_https'] = true
        prometheus['enable'] = false
        alertmanager['enable'] = false
        node_exporter['enable'] = false
        gitlab_kas['enable'] = false
        sidekiq['listen_address'] = "0.0.0.0"
        redis_exporter['listen_address'] = '0.0.0.0:9121'
        postgres_exporter['listen_address'] = '0.0.0.0:9187'
        gitlab_exporter['listen_address'] = '0.0.0.0'
    networks:
      privnet:
      pubnet:
        ipv4_address: ${LAN_SUBNET}.26
    volumes:
      - gitlab-storage:/var/opt/gitlab
      - gitlab-etc:/etc/gitlab
      - gitlab-log:/var/log/gitlab
      - tlscert:/var/opt/tlscert
    # TODO: disable nginx...

  gitlabrunner:
    image: gitlab/gitlab-runner:latest
    hostname: gitlabrunner
    privileged: true
    networks:
      privnet:
      pubnet:
        ipv4_address: ${LAN_SUBNET}.27
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - gitlab-runner-config:/etc/gitlab-runner

# TODO:
#  - share ${USER_NAME}'s account (passwd/PAM) among containers that access it (desktop, files, maybe www) somehow
#  - more services: mail, ...
